; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{14BCFB5E-4BF0-4C35-8F32-154B63CC699D}
AppName=InfoDroplets Client
AppVersion=1.1.2
;AppVerName=InfoDroplets Client 1.0
AppPublisher=Soprobotics
DefaultDirName={autopf}\InfoDroplets Client
UninstallDisplayIcon={app}\InfoDroplets.Client.exe
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
SolidCompression=yes
WizardStyle=classic
SetupIconFile=D:\UNI\_Szakdolgozat\code\InfoDropletsClient\InfoDroplets.Client\icon.ico
OutputBaseFilename=InfoDropletsClient_Setup_V1.1


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "hungarian"; MessagesFile: "compiler:Languages\Hungarian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "D:\UNI\_Szakdolgozat\code\InfoDropletsClient\InfoDroplets.Client\bin\Release\net6.0-windows10.0.22621.0\publish\win-x86\InfoDroplets.Client.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UNI\_Szakdolgozat\code\InfoDropletsClient\InfoDroplets.Client\bin\Release\net6.0-windows10.0.22621.0\publish\win-x86\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\InfoDroplets Client"; Filename: "{app}\InfoDroplets.Client.exe"
Name: "{autodesktop}\InfoDroplets Client"; Filename: "{app}\InfoDroplets.Client.exe"; Tasks: desktopicon

[Run]
Filename: "{app}\InfoDroplets.Client.exe"; Description: "{cm:LaunchProgram,InfoDroplets Client}"; Flags: nowait postinstall skipifsilent

[Code]

/////////////////////////////////////////////////////////////////////
function GetUninstallString(): String;
var
  sUnInstPath: String;
  sUnInstallString: String;
begin
  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppId")}_is1');
  sUnInstallString := '';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  Result := sUnInstallString;
end;


/////////////////////////////////////////////////////////////////////
function IsUpgrade(): Boolean;
begin
  Result := (GetUninstallString() <> '');
end;


/////////////////////////////////////////////////////////////////////
function UnInstallOldVersion(): Integer;
var
  sUnInstallString: String;
  iResultCode: Integer;
begin
// Return Values:
// 1 - uninstall string is empty
// 2 - error executing the UnInstallString
// 3 - successfully executed the UnInstallString

  // default return value
  Result := 0;

  // get the uninstall string of the old app
  sUnInstallString := GetUninstallString();
  if sUnInstallString <> '' then begin
    sUnInstallString := RemoveQuotes(sUnInstallString);
    if Exec(sUnInstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES','', SW_HIDE, ewWaitUntilTerminated, iResultCode) then
      Result := 3
    else
      Result := 2;
  end else
    Result := 1;
end;

/////////////////////////////////////////////////////////////////////
procedure CurStepChanged(CurStep: TSetupStep);
begin
  if (CurStep=ssInstall) then
  begin
    if (IsUpgrade()) then
    begin
      UnInstallOldVersion();
    end;
  end;
end;